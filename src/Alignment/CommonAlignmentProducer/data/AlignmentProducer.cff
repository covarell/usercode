
# misalignment scenarios
include "Alignment/TrackerAlignment/data/Scenarios.cff"
#  replace TrackerShortTermScenario.TPBs.scale = 10.
#  replace TrackerShortTermScenario.TPEs.scale = 10.

# algorithms
include "Alignment/CSA06AlignmentAlgorithm/data/CSA06AlignmentAlgorithm.cfi"
include "Alignment/MillePedeAlignmentAlgorithm/data/MillePedeAlignmentAlgorithm.cfi"
include "Alignment/KalmanAlignmentAlgorithm/data/KalmanAlignmentAlgorithm.cfi"

looper = AlignmentProducer
{
    untracked bool isData = false
 
    untracked uint32 maxLoops = 1
    InputTag tkTag = AlignmentTracks:
    InputTag tjTag = cosmictrackrefitter:
    InputTag simTag = g4SimHits:

    untracked bool doTracker = true
    untracked bool doMuon    = false

    PSet ParameterBuilder = {
        PSet Selector = {
            # selection of alignables and their parameters:
            # comma separated pairs of detector parts/levels as defined in AlinmentParameterSelector
            # (note special meaning if the string contains "SS" or "DS" or ends with "Layers"
            # followed by two digits)
            # and of d.o.f. to be aligned (x,y,z,alpha,beta,gamma) in local frame:
            # '0' means: deselect, '1' select. Others as 1, but might be interpreted in a special
            # way in the used algorithm (e.g. 'f' means fixed for millepede)
            vstring alignParams = {
                "PixelHalfBarrelLayers,111000" # can add more:
                #,"BarrelDSRods,111000,barrleSelDs", "BarrelSSRods,101000" # barrleSelDs: cf. below
            }
            # Old predefined scenarios can be achieved by the following combined selections:
            #
            # "ScenarioA" -> "PixelHalfBarrelDets,111000","BarrelDSRods,111000",
            #                "BarrelSSRods,101000"
            # "ScenarioB" -> "PixelHalfBarrelLadders,111000","BarrelDSLayers,111000",
            #                "BarrelSSLayers,110000"
            # "CustomStripLayers" -> "BarrelDSLayers,111000","BarrelSSLayers,110000",
            #                        "TIDLayers,111000","TECLayers,110000"
            # "CustomStripRods" -> "BarrelDSRods,111000","BarrelSSRods,101000",
            #                      "TIDRings,111000","TECPetals,110000"
            # "CSA06Selection" -> "TOBDSRods,111111","TOBSSRodsLayers15,100111",
            #                     "TIBDSDets,111111","TIBSSDets,100111"
            #
            # If a component in 'alignableParamSelector' contains a third comma-separated
            # part, a PSet with that name is expected, defining arrays for ranges in
            # eta, r, z and phi. These arrays must have an even number of entries and
            # the alignables are required to fulfil
            # ('x'Range[0] <= 'x' < 'x'Range[1]) || ('x'Range[2] <= 'x' < 'x'Range[3]) || etc.
            # PSet barrleSelDs = { # name defined above
            #   vdouble etaRanges =  {-2., -0.4, 0., 1.5}
            #   vdouble zRanges   =  {} # empty array means no restriction
            #   vdouble rRanges   =  {}
            #   vdouble phiRanges =  {1.5, -0.5} # a phi-slice covering the +-pi sign flip
            # }
            PSet TIBSelOnly = {
               vdouble etaRanges =  {}
               vdouble zRanges   =  {} 
               vdouble rRanges   =  {}
               vdouble phiRanges =  {} 
            }
        }
    }

    # number of selected alignables to be kept fixed
    int32 nFixAlignables = 0

    # include configuration for AlignmentParameterStore
    include "Alignment/CommonAlignmentAlgorithm/data/AlignmentParameterStore.cfi"

    # simple misalignment applied to selected alignables and selected dof
    string parameterSelectorSimple = "-1" # means only active parameters, else use e.g. "111000"
    double randomShift    = 0.0
    double randomRotation = 0.0
	
    # Misalignment from database: if true, requires configuration of PoolDBESSource
    # See DBConfiguration.cff for an example
    untracked bool applyDbAlignment = false

    # misalignment scenario
    bool doMisalignmentScenario = false
    PSet MisalignmentScenario = { 
      using TrackerShortTermScenario

      #untracked bool fixTPB = 0
      #untracked bool fixTPE = 1
      #untracked bool fixTIB = 1
      #untracked bool fixTOB = 1
      #untracked bool fixTID = 1
      #untracked bool fixTEC = 1
    }
	
    # Choose one algorithm
    PSet algoConfig = {
		using CSA06AlignmentAlgorithm
        # using MillePedeAlignmentAlgorithm
        # using KalmanAlignmentAlgorithm
    }

	
    # Save alignment corrections to DB: if true, requires configuration of PoolDBOutputService
    # See DBConfiguration.cff for an example
    bool saveToDB = false

}


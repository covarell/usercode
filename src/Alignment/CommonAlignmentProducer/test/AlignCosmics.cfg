process Alignment = {
 
	service = MessageLogger { 
		untracked vstring destinations = { "cout", "alignment" } 
		untracked vstring statistics = { "cout", "alignment" }
		untracked vstring categories = { "Alignment" }
		
		untracked PSet cout    = { 
			untracked string threshold = "DEBUG" 
			untracked bool noLineBreaks = true 
		}
		untracked PSet alignment  = { 
			untracked string threshold = "DEBUG" 
			untracked PSet INFO = { untracked int32 limit = 0 }
			untracked PSet WARNING = { untracked int32 limit = 0 }
			untracked PSet ERROR = { untracked int32 limit = 0 }
			untracked PSet DEBUG = { untracked int32 limit = -1 }
			untracked PSet Alignment = { untracked int32 limit = -1}
			untracked bool noLineBreaks = true 
		}
	}
	
        ################## General settings #####################
	# no magnetic field
	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
	include "MagneticField/Engine/data/uniformMagneticField.cfi"
        es_prefer = UniformMagneticFieldESProducer{}
        replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0

	# ideal geometry and interface
	include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
        # include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
	include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
	include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"

        include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
        include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
        #stripCPE
        include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
        #pixelCPEs
        include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"
        #TransientTrackingBuilder
        include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"
        #MeasurementTracker
        include "RecoTracker/MeasurementDet/data/MeasurementTrackerESProducer.cfi"
        replace MeasurementTracker.pixelClusterProducer = ""
        include "RecoTracker/CkfPattern/data/CkfTrajectoryBuilderESProducer.cfi"

        ############### Cosmic Track Finder ###########################
        module cosmicseedrefitter = CosmicSeedGenerator {
          InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
          InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
          InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
          double ptMin=0.9
          double originRadius=150
          double originHalfLength=90
          double originZPosition=0
          string TTRHBuilder        =  "WithTrackAngle"	
          untracked string GeometricStructure  = "STANDARD" //other choice: TIBD+
        }

        module cosmictrackrefitter = CosmicTrackFinder {
          bool TrajInEvents = true
          InputTag cosmicSeeds = cosmicseedfinderTIFTIBTOB:
          InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
          InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
          InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
          string HitProducer        = "siStripRecHits"
          int32 MinHits=4
          double Chi2Cut=500.
          string TTRHBuilder    =   "WithTrackAngle"
          untracked string GeometricStructure  = "MTCC"
          untracked bool debug = true
        }


        ################# Combinatorial Track Finder ####################
        module combinatorialseedrefitter = CombinatorialSeedGeneratorForCosmics{
         InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
         InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
         InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
         double SeedMomentum = 1    #initial momentum in GeV !!!	
         untracked string GeometricStructure  = "CkfTIF3"  #/other options: CkfTIBD+ 
         string Matcher = "StandardMatcher"
         bool UseScintillatorsConstraint = false
         PSet UpperScintillatorParameters = {
           double WidthInX = 500      #half dimension in global X
           double LenghtInZ = 500	   #half dimension in global Z	
           double GlobalX = 0         #scintillator's center position in global X
           double GlobalY = 300       #scintillator's center position in global Y
           double GlobalZ = 50        #scintillator's center position in global Z  
         }
         PSet LowerScintillatorParameters = {
           double WidthInX = 500      #half dimension in global X
           double LenghtInZ = 500     #half dimension in global Z
           double GlobalX = 0         #scintillator's center position in global X
           double GlobalY = -100      #scintillator's center position in global Y
           double GlobalZ = 50        #scintillator's center position in global Z
         }
       }
       
       include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"
       
       replace ckfTrackCandidates.TrajectoryBuilder    = "GroupedCkfTrajectoryBuilder"
       replace ckfTrackCandidates.SeedProducer         = "AlignmentSeeds"
       replace GroupedCkfTrajectoryBuilder.ptCut               = 0.01
       replace GroupedCkfTrajectoryBuilder.maxLostHit          = 3
       replace GroupedCkfTrajectoryBuilder.maxConsecLostHit    = 1
       replace GroupedCkfTrajectoryBuilder.minimumNumberOfHits = 4
       
       # final fit
       module ctfWithMaterialTracks = TrackProducer {
         string Fitter = "KFFittingSmoother"
         string Propagator = "PropagatorWithMaterial"
         string src = "ckfTrackCandidatesTIFTIBTOB"
         string producer = ""
         string TTRHBuilder       =   "WithTrackAngle"
         bool TrajectoryInEvent = true
       }
       
       # track info
       include "AnalysisAlgos/TrackInfoProducer/data/TrackInfoProducer.cfi"

       #################### Selection Cuts ###############################
       # seed selection for alignment
       module AlignmentSeeds = AlignmentSeedSelectorModule {
                # No seed recalculation
         	InputTag src = cosmicseedfinderTIFTIBTOB:
                # for CosmicTF
                # InputTag src = cosmicseedrefitter: 
                # for CombinatorialTF
	 	# InputTag src = combinatorialseedrefitter:
	 	bool filter = true

	 	bool applySeedNumber = true
	 	int32 minNSeeds  = 0
	 	int32 maxNSeeds  = 50
       }  

       # track selection for alignment
       module AlignmentTracks = AlignmentTrackSelectorModule {
                # for CosmicTF
	        InputTag src = cosmictrackrefitter:
                # for CombinatorialTF
		# InputTag src = ctfWithMaterialTracks:
		bool filter = true
		
		bool applyBasicCuts = true
		double ptMin   = 0.0 
		double ptMax   = 60.0
		double etaMin  = -0.5
		double etaMax  =  0.5
		double phiMin  = -1.8
		double phiMax  = -1.2
		double nHitMin =  12
		double nHitMax = 99
		double chi2nMax = 1100.
                PSet minHitsPerSubDet = {
                   untracked int32 inTIB = 4
                   untracked int32 inTOB = 8
                }
		
		bool applyNHighestPt = false
		int32 nHighestPt = 2
		
		bool applyMultiplicityFilter = true
		int32 minMultiplicity = 1
        	int32 maxMultiplicity = 1    
	}

        ################### Alignment ################################
	# Alignment producer (incl refitter)
	include "Alignment/CommonAlignmentProducer/data/AlignmentProducer.cff"
        # replace AlignmentProducer.ParameterBuilder.Selector.alignParams = { "TIBSSLayers,100010" }

        replace AlignmentProducer.ParameterBuilder.Selector.alignParams = { "TIBRods,100001,TIBSelOnly" }
        replace AlignmentProducer.ParameterBuilder.Selector.TIBSelOnly.phiRanges = {0.785, 2.355}
        replace AlignmentProducer.ParameterBuilder.Selector.TIBSelOnly.etaRanges = {0., 3.0} 
       
        replace AlignmentProducer.isData = true
        # replace AlignmentProducer.tjTag = ctfWithMaterialTracks:

        # replace AlignmentProducer.doMisalignmentScenario = true
        replace AlignmentProducer.applyDbAlignment = true   
        replace AlignmentProducer.randomShift = 0.00
        replace AlignmentProducer.randomRotation = 0.00	
        replace HIPAlignmentAlgorithm.eventPrescale = 5
    
        # APE
        replace HIPAlignmentAlgorithm.apeParam = "linear" 
        replace HIPAlignmentAlgorithm.apeSPar = { 0.09, 0.0, 20. }
        replace HIPAlignmentAlgorithm.apeRPar = { 0.005, 0.0, 20. }

	########################### input files       
        # include "Alignment/CommonAlignmentProducer/data/data-FNAL.cfi"
        source = PoolSource { 
		
		untracked vstring fileNames = { 
                   "rfio:/castor/cern.ch/user/c/covarell/reducedRootfiles/dataRED-6215.root",
                   "rfio:/castor/cern.ch/user/c/covarell/reducedRootfiles/dataRED-6217.root",
                   "rfio:/castor/cern.ch/user/c/covarell/reducedRootfiles/dataRED-6346.root",
                   "rfio:/castor/cern.ch/user/c/covarell/reducedRootfiles/dataRED-6474-85.root"
                }
             	untracked int32 maxEvents   = 100
		untracked uint32 skipEvents = 0
	}	   
        
        ########## The path ###############################
        # For CosmicTF
        path p = { cosmictrackrefitter }

        # For CombinatorialTF
        # path p = { ctfWithMaterialTracks , AlignmentTracks}
 
        # REPLACEME (needed for inserting replace statements by perl script!)

}


process Alignment = {
    
    # initialize  MessageLogger
    service = MessageLogger { 
        untracked vstring destinations = { "cout", "alignment" } # .log automatically
		untracked vstring statistics = { "cout", "alignment"}
        
		untracked vstring categories = { "Alignment" }
		
		untracked PSet cout= { 
			untracked string threshold = "DEBUG" 
			untracked bool noLineBreaks = true 
		}
		untracked PSet alignment  = { 
			untracked string threshold = "INFO" 
			untracked PSet INFO = { untracked int32 limit = 0 }
			untracked PSet WARNING = { untracked int32 limit = 0 }
			untracked PSet ERROR = { untracked int32 limit = 0 }
			untracked PSet DEBUG = { untracked int32 limit = 0 }
			untracked PSet Alignment = { untracked int32 limit = -1}
			untracked bool noLineBreaks = true 
		}
          # vstring debugModules = { "TrackRefitter","AlignmentProducer" }
	}
	
	# initialize magnetic field
	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
	include "MagneticField/Engine/data/uniformMagneticField.cfi"
        es_prefer = UniformMagneticFieldESProducer{}
        replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0

	# ideal geometry and interface
	include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
	include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

	# track selection for alignment
        include "Alignment/CommonAlignmentProducer/data/AlignmentTrackSelector.cfi" 
	replace AlignmentTracks.src = myCtfWithMaterialTracksTIF:
        replace AlignmentTracks.filter = true
        replace AlignmentTracks.ptMin = 0.01
        replace AlignmentTracks.etaMin = -0.6
        replace AlignmentTracks.etaMax = 0.6
        replace AlignmentTracks.phiMin = -1.8
        replace AlignmentTracks.phiMax = -1.2
        replace AlignmentTracks.nHitMin = 4
        replace AlignmentTracks.chi2nMax = 4.0
        replace AlignmentTracks.minHitsPerSubDet.inTIB = 0
        replace AlignmentTracks.minHitsPerSubDet.inTOB = 4
        replace AlignmentTracks.applyMultiplicityFilter = true
        replace AlignmentTracks.maxMultiplicity = 1
        replace AlignmentTracks.seedOnlyFrom = 2

        # track hit filter
        include "Alignment/TrackHitFilter/data/TrackHitFilter.cfi"
        replace TrackHitFilter.src = AlignmentTracks
        replace TrackHitFilter.hitSelection = "TOBOnly"
 
        # outlier rejection is ON
        replace KFFittingSmoother.EstimateCut = 4
        replace KFFittingSmoother.MinNumberOfHits = 3

	# Alignment producer
	include "Alignment/CommonAlignmentProducer/data/AlignmentProducer.cff"
         # replace AlignmentProducer.ParameterBuilder.Selector.alignParams = { "TIBSSLayers,100010" }

        # replace AlignmentProducer.ParameterBuilder.Selector.alignParams = { "TIBSSLayers,100000,TIBSelOnly", "TOBSSLayers,100000,TOBSelOnly", "TIBDSLayersLayers22,101000,TIBSelOnly", "TOBDSLayersLayers11,101010,TOBSelOnly" }
        # replace AlignmentProducer.ParameterBuilder.Selector.alignParams = { "TIBSSRods,100000,TIBSelOnly" , "TOBSSRodsLayers35,100000,TOBSelOnly", "TOBSSRodsLayers66,100000,TOBSelOnlyL6" ,"TIBDSRodsLayers22,110000,TIBSelOnly", "TOBDSRodsLayers11,110000,TOBSelOnly"}
        # replace AlignmentProducer.ParameterBuilder.Selector.alignParams = { "TIBSSRods,100000,TIBSelOnly" , "TOBSSRodsLayers35,100000,TOBSelOnly", "TOBSSRodsLayers66,100000,TOBSelOnlyL6" ,"TIBDSRodsLayers22,110000,TIBSelOnly", "TOBDSRodsLayers11,110000,TOBSelOnly", "TIBDSRodsLayers11,110000,TIBSelOnlyL1", "TOBDSRodsLayers22,110000,TOBSelOnlyL2", "TIBDSRodsLayers11,000000,TIBSelOnlyL1inv", "TOBDSRodsLayers22,000000,TOBSelOnlyL2inv"}
        # replace AlignmentProducer.ParameterBuilder.Selector.alignParams = { "TIBSSRods,100000,TIBSelOnly" , "TOBSSRodsLayers35,100000,TOBSelOnly", "TOBSSRodsLayers66,100000,TOBSelOnlyL6" ,"TIBDSRods,110000,TIBSelOnly", "TOBDSRods,110000,TOBSelOnly" }
        replace AlignmentProducer.ParameterBuilder.Selector.alignParams = { "TOBSSRodsLayers34,100000,TOBSelOnly", "TOBSSRodsLayers56,100000,TOBSelOnlyL6", "TOBDSRods,100000,TOBSelOnly" }  
        # replace AlignmentProducer.ParameterBuilder.Selector.alignParams = { "TIBSSRods,100000" , "TOBSSRods,100000" ,"TIBDSRods,110000", "TOBDSRods,110000" }  
        replace AlignmentProducer.ParameterBuilder.Selector.TIBSelOnly.phiRanges = {1.067, 1.616}
        replace AlignmentProducer.ParameterBuilder.Selector.TIBSelOnly.zRanges = {0., 1000.}
        replace AlignmentProducer.ParameterBuilder.Selector.TOBSelOnly.phiRanges = {0.55, 1.616}
        replace AlignmentProducer.ParameterBuilder.Selector.TOBSelOnly.zRanges = {0., 1000.}
        replace AlignmentProducer.ParameterBuilder.Selector.TOBSelOnlyL6.phiRanges = {1.042, 1.616}
        replace AlignmentProducer.ParameterBuilder.Selector.TOBSelOnlyL6.zRanges = {0., 1000.}
        replace AlignmentProducer.ParameterBuilder.Selector.TIBSelOnlyL1.phiRanges = {1.067, 1.34, 1.44, 1.616}
        replace AlignmentProducer.ParameterBuilder.Selector.TIBSelOnlyL1.zRanges = {0., 1000.}  
        replace AlignmentProducer.ParameterBuilder.Selector.TOBSelOnlyL2.phiRanges = {1.067, 1.30, 1.40, 1.616}
        replace AlignmentProducer.ParameterBuilder.Selector.TOBSelOnlyL2.zRanges = {0., 1000.}  
        replace AlignmentProducer.ParameterBuilder.Selector.TIBSelOnlyL1inv.phiRanges = {1.34, 1.44}
        replace AlignmentProducer.ParameterBuilder.Selector.TIBSelOnlyL1inv.zRanges = {0., 1000.}  
        replace AlignmentProducer.ParameterBuilder.Selector.TOBSelOnlyL2inv.phiRanges = {1.30, 1.40}
        replace AlignmentProducer.ParameterBuilder.Selector.TOBSelOnlyL2inv.zRanges = {0., 1000.}  
       
        replace AlignmentProducer.isData = true
        replace AlignmentProducer.tkTag = TrackRefitter
        replace AlignmentProducer.tjTag = TrackRefitter
        
        # replace AlignmentProducer.doMisalignmentScenario = true
        # replace AlignmentProducer.saveToDB = false 

        include "CondCore/DBCommon/data/CondDBSetup.cfi"
        service = PoolDBOutputService  {
           using CondDBSetup
           VPSet toPut = {
             { string record = "TrackerAlignmentRcd" 
               string tag = "Alignments" }
             ,
             { string record = "TrackerAlignmentErrorRcd" 
               string tag = "AlignmentErrors" }
             } 
             string connect = "sqlite_file:alignments.db"
             untracked string catalog = "file:alignments.xml"
             string timetype = "runnumber"
        } 
       
        replace AlignmentProducer.randomShift = 0.00
        replace AlignmentProducer.randomRotation = 0.00	

        replace CSA06AlignmentAlgorithm.eventPrescale = 5
        replace CSA06AlignmentAlgorithm.minimumNumberOfHits = 100 
    
        # APE
        replace CSA06AlignmentAlgorithm.apeParam = "linear" 
        replace CSA06AlignmentAlgorithm.apeSPar = { 0.015, 0.005, 3. }
        replace CSA06AlignmentAlgorithm.apeRPar = { 0.0, 0.0, 5. }

        # Pattern recognition and tracking (repeated)
        include "Alignment/CommonAlignmentProducer/data/CombinatorialSeedGeneratorForCosmicsTIF.cff"
        include "Alignment/CommonAlignmentProducer/data/CkfTrackCandidatesTIF.cff"
        include "Alignment/CommonAlignmentProducer/data/CTFFinalFitWithMaterialTIF.cff"
 
        # Track refitter (adapted to alignment needs)
        # include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilderWithoutRefit.cfi"
        include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi" 
        include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
        replace TrackRefitter.src = "TrackHitFilter"
        replace TrackRefitter.TTRHBuilder = "WithTrackAngle"
        replace TrackRefitter.TrajectoryInEvent = true

      	########################### input files
        # TIB-TOB (no TEC-)       
        include "Alignment/CommonAlignmentProducer/data/data-Pass3-6215-6509.cfi"       
        # TIB-TOB-TECc (all runs)
        # include "Alignment/CommonAlignmentProducer/data/data-Pass3-9261-12603.cfi" 

        sequence ckftracksTIF = {myCombinatorialcosmicseedfinderTIF, myCkfTrackCandidatesTIF,myCtfWithMaterialTracksTIF}
        path p = { ckftracksTIF, AlignmentTracks, TrackHitFilter, TrackRefitter }
    
        # REPLACEME (needed for inserting replace statements by perl script!)

}


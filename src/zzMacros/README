DETERMINE SIGNAL ACCEPTANCE PARAMETERS FOR GRAVITON
---------------------------------------------------

1. Determine acceptance 1D functions using nominal datasets divided by 
toy datasets generated according to the gen-level distributions (simplified
way)

make RooPentaSpinTwo.o
make FitAccSimp_ZZ
./FitAccSimp_ZZ -f <file containing the RooDataSet> -m <graviton mass>

(other options are:
-a <minimum acceptance> to restrict the fit only to a minimum value of the
acceptance avaioding values close to 0
- c1 / c2 / cs <maximum value> to restrict the fit only to the range of
cosTheta1 / cosTheta2 / cosThetaStar in [-maximum value, maximum value]
)

N.B. The theoretical parameters (fz1, fz2, f++, f+-, f0+, f0-, f00) are 
computed for a RS graviton, following http://arxiv.org/abs/1001.3396. 
For other spin models (SM Higgs, pseudoscalar etc.) they must be changed 
according to that paper.

2. Determine acceptance 1D functions from a complete 5D fit (assumes the
previous step has been run on the corresponding mass point, acceptance 
parameters are used as starting values)

make FitAcc_ZZ
./FitAcc_ZZ -f <file containing the RooDataSet> -m <graviton mass>

(other options are the same as before)

This step takes a VERY long time to draw the output plots.

3. Fit the acceptance parameters as a function of mZZ.

The interactive macro fitAccPars.C (just run .x fitAccPars.C) takes all the
output from step 2, i.e. one textfile per mass point, fits all parameters
as a function of mZZ and outputs allParams.txt, which is the input for
the LDProducer in the CMG code.

FIT PT DISTRIBUTIONS FOR MELA
-----------------------------

1. Fit pT distributions for signal (H) and background (ZZ)

root -l -b

.L PDFs/RooTsallis.cc+
.L PDFs/RooTsallis2.cc+
.L PDFs/RooTsallis3.cc+
.L fitPt.C++
fitPt(<Higgsmass>,<spread>,<sqrts = 7 or 8>,<isVBF = true or false>)

Only events with Higgsmass-spread<mZZ<Higgsmass+spread will be considered.
More options are available inside the macro. You need two directories figs/
and text/ if you want to save figures and/or fitted parameters.

.x fitParsPt.C will fit the Tsallis parameters as a function of mZZ.

 

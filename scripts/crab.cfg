[CRAB]

jobtype = cmssw
scheduler = glite
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
# server_name = cern

[CMSSW]

### The data you want to access (to be found on DBS)
datasetpath=/BpToJPsiMuMu_2MuPEtaFilter_7TeV-pythia6-evtgen/Winter10-E7TeV_ProbDist_2010Data_BX156_START39_V8-v1/AODSIM

### The ParameterSet you want to use
pset=onia2MuMuPATFall10_cfg.py

### Splitting parameters
total_number_of_events=-1
#total_number_of_events=10
#events_per_job = 500
number_of_jobs = 5

### The output files (comma separated list)
output_file = onia2MuMuPAT.root

[USER]

### OUTPUT files Management
##  output back into UI
return_data = 0

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
# ui_working_dir = /afs/cern.ch/user/c/covarell/scratch0/jpsi-trig/CMSSW_2_1_11/src/HLTrigger/Configuration/python

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 1
check_user_remote_dir  = 0

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
#storage_pool=None

### if copy_data = 1 ###
storage_element=storage01.lcg.cscs.ch
storage_path=/srm/managerv2?SFN=/pnfs/lcg.cscs.ch/cms/trivcat/ 
user_remote_dir=/store/group/b-physics
storage_port = 8443
 
### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=1
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name = Onia2MuMu-v7
### Specify the URL of DBS istance where CRAB has to publish the output files
dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_02_writer/servlet/DBSServlet

#if server
#thresholdLevel = 100
eMail = roberto.covarelli@cern.ch 

[GRID]

# LCG middleware version installed on testbed
lcg_version = 2
 
## to change the CMS-broker RB. The ones available for CMS are "CERN" and "CNAF": the configuration
## files needed to change the broker will be automatically downloaded from CRAB web page. If the
## files are already present on the working directory they will be used. 
#rb = CNAF
 
## CMS myproxy server, to proxy delegation
proxy_server = myproxy.cern.ch 
 
## Role in VOMS
#role = superman
 
## Group in VOMS
#group = superheros
 
## If you don't want CRAB to check your proxy
#dont_check_proxy = 1
 
## to add other requirements to jdl file, as example the Operating System
#requirements = (other.GlueHostOperatingSystemName == "RedHat")
 
## to add other parameters to jdl file: comma separated list, each item _must_
## be complete, including the closing ";"
additional_jdl_parameters = AllowZippedISB = false;
 
## cpu time and wall_clock_time(=real time) in minutes. Written into the jdl file
#max_cpu_time = 60
#max_wall_clock_time = 60
 
## SE Black List: all the storage elements (SE) containing the following strings(comma
## separated list) will not be considered for submission.
## for discovery, please use http://cmslcgco01.cern.ch:8001/
#se_black_list = edu
 
## SE White List: only the storage elements (SE) containing the following strings (comma
## separated list) will be considered for submission.
## for discovery, please use http://cmslcgco01.cern.ch:8001/
#se_white_list = infn
 
## CE Black List: all the CE whose name contains the following strings (comma
## separated list) will not be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
#ce_black_list = edu
 
## CE White List: only the CE whose name contains the following strings (comma
## separated list) will be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
#ce_white_list = infn
 
## fields written into jdl
virtual_organization = cms
 
## number or retry count
retry_count = 2
 
## LFC catalog parameters
lcg_catalog_type = lfc
lfc_host = lfc-cms-test.cern.ch
lfc_home = /grid/cms

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))
[LSF]
#queue=1nd
